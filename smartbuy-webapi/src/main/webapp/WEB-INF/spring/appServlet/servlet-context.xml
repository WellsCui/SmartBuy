<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
	 http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans
		 http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		 http://www.springframework.org/schema/context/spring-context.xsd
		 http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		  http://www.springframework.org/schema/security 		  
      http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
<context:annotation-config/>
	<mvc:annotation-driven  conversion-service="conversionService" >
		<mvc:message-converters>
			<bean
				class="org.springframework.http.converter.ObjectToStringHttpMessageConverter">
				<constructor-arg>
					<bean
						class="org.springframework.context.support.ConversionServiceFactoryBean" />
				</constructor-arg>
			</bean>

			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<array>
						<util:constant static-field="org.springframework.http.MediaType.TEXT_PLAIN" />
						<util:constant
							static-field="org.springframework.http.MediaType.APPLICATION_JSON" />
					</array>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<bean id="conversionService"
        class="org.springframework.context.support.ConversionServiceFactoryBean">
    <property name="converters">
        <list>
            <bean class="com.smartbuy.utilities.ArrayListConverter"/>   
        </list>
    </property>
   </bean>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<context:component-scan base-package="com.smartbuy" />

	<!-- Security configuration for REST services. -->

	<!-- <security:http pattern="/api/**" authentication-manager-ref="authenticationManager" 
		entry-point-ref="restServicesEntryPoint" create-session="stateless"> <security:custom-filter 
		ref="restServicesFilter" before="PRE_AUTH_FILTER" /> </security:http> -->
	<!-- Entry point for REST service. -->
	<!-- <bean id="restServicesEntryPoint" class="com.smartbuy.security.RestAuthenticationEntryPoint" 
		/> -->
	<!-- Filter for REST services. -->
	<!-- <bean id="restServicesFilter" class="com.smartbuy.security.RestUsernamePasswordAuthenticationFilter"> 
		<property name="postOnly" value="false" /> <property name="authenticationManager" 
		ref="authenticationManager" /> <property name="authenticationSuccessHandler" 
		ref="restServicesSuccessHandler" /> </bean> -->
	<!-- A handler for successful REST service authentication. -->
	<!-- <bean id="restServicesSuccessHandler" class="com.smartbuy.security.RestAuthenticationSuccessHandler" 
		/> -->
	<!-- Security configuration for other resources. Use login form. -->
	<!-- <security:http use-expressions="true" create-session="always"> <security:intercept-url 
		patpasswordtern="/**" access="isAuthenticated()" /> <security:form-login 
		login-page="/security/login.html?project=sample-project" authentication-failure-url="/security/login.html?project=sample-project&amp;error=true" 
		/> <security:logout logout-success-url="/security/login.html?project=sample-project" 
		/> </security:http> -->
	<!-- Authentication manager. -->
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider>
			<security:user-service id="userService">
				<security:user name="admin" password="password"
					authorities="ROLE_ADMIN" />
				<security:user name="user" password="password"
					authorities="ROLE_USER" />
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>
	<!-- <security:global-method-security secured-annotations="enabled" jsr250-annotations="enabled" 
		pre-post-annotations="enabled"> </security:global-method-security> -->
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> 
		<property name="messageConverters"> <list> <ref bean="jsonMessageConverter" 
		/> <ref bean="byteArrayMessageConverter"/> <ref bean="stringMessageConverter"/> 
		</list> </property> </bean> <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" 
		> <property name="supportedMediaTypes" value="application/json" /> </bean> 
		<bean id="byteArrayMessageConverter" class="org.springframework.http.converter.ByteArrayHttpMessageConverter" 
		> <property name="supportedMediaTypes" value="application/octet-stream" /> 
		</bean> <bean id="stringMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter" 
		> <property name="supportedMediaTypes" value="text/plain" /> </bean> -->

	<!-- <bean id="simpleCORSFilter" class="com.smartbuy.security.SimpleCORSFilter"> 
		<property name="csrfTokenRepository" ref="csrfTokenRepository" /> </bean> 
		<bean id="csrfTokenRepository" class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository"> 
		<property name="headerName" value="XSRF-TOKEN" /> </bean> -->

	<security:http create-session="stateless"
		entry-point-ref="digestEntryPoint">
		<!-- <http-basic /> -->
		<security:custom-filter ref="digestFilter"
			after="BASIC_AUTH_FILTER" />
		<!-- <security:csrf token-repository-ref="csrfTokenRepository" /> -->
	</security:http>

	<bean id="digestFilter"
		class="org.springframework.security.web.authentication.www.DigestAuthenticationFilter">
		<property name="userDetailsService" ref="userService" />
		<property name="authenticationEntryPoint" ref="digestEntryPoint" />
	</bean>

	<bean id="digestEntryPoint"
		class="org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint">
		<property name="realmName" value="Contacts Realm via Digest Authentication" />
		<property name="key" value="acegi" />
	</bean>


	<bean name="DelphiService" class="com.smartbuy.services.DelphiServiceImpl" />
	<bean name="SmartBuyDao" class="com.smartbuy.dao.SmartBuyDaoImpl" />
		
	<bean id="smartBuyEmf"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="SmartBuy"/>
		<!-- <property name="dataSource" ref="SmartBuy" /> -->
		<property name="loadTimeWeaver">
			<bean
				class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>
	</bean>

	<bean id="myTxManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="smartBuyEmf" />
	</bean>
</beans>
